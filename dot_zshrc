# vim: ft=zsh
PATH=/usr/bin:/bin:/usr/sbin:/sbin
export PATH=$HOME/.local/bin:$HOME/bin:/opt/homebrew/bin:/usr/local/bin:$PATH

if [ -f $HOME/.zshrc.local ]; then
	source $HOME/.zshrc.local
fi

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=100000
setopt SHARE_HISTORY
setopt nobeep
unsetopt autocd extendedglob notify
bindkey -e
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '${HOME}/.zshrc'

# End of lines added by compinstall
#
# Add homebrew completions
FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

autoload -Uz compinit
compinit

eval "$(starship init zsh)"

alias cd="z"
alias cz="chezmoi"
alias gpsup="git push -u origin HEAD"
alias k="kubectl"
alias kns="kubens"
alias ktx="kubectx"
alias ll="ls -lha"
alias ls="ls --color=auto"
alias lz="lazygit"
alias lzd="lazydocker"
alias n="nvim"
alias tf="terraform"
alias tfdocs="terraform-docs md . | pbcopy"
alias tg="terragrunt"
alias venv="source .venv/bin/activate; which python"
alias vim="nvim"
alias watch="watch "

export UV_PYTHON_PREFERENCE=only-system
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

eval "$(nodenv init -)"
export PATH=$PATH:$(npm get prefix)/bin

export GOPATH="$(go env GOPATH)"
export PATH=$PATH:$GOPATH/bin


bindkey -v
bindkey ^R history-incremental-search-backward

eval "$(zoxide init zsh)"
eval "$(fzf --zsh)"

export HOMEBREW_NO_ENV_HINTS=1

function saml() {
	if [ -z "$1" ]
	then
		saml2aws login
		export AWS_PROFILE=saml
	else
		saml2aws login -a $1
		export AWS_PROFILE=$1
	fi
}

function podpurge() {
	# Stop all running containers
	podman stop -a
	# Remove all containers (including stopped ones)
	podman rm -a
	# Remove all images
	podman rmi -a
	# Remove all unused data (images, containers, volumes, and networks)
	podman system prune -a --volumes
}

# Function to setup Docker host for Podman
setup_podman_docker_host() {
    local verbose=false
    if [ "$1" = "-v" ]; then
        verbose=true
    fi

    debug() {
        if $verbose; then
            echo "$1"
        fi
    }

    # Check if podman exists
    if ! command -v podman >/dev/null 2>&1; then
        debug "Podman is not installed"
        return 1
    fi

    # Check if any podman machine exists
    if [ -z "$(podman machine list --format '{{.Name}}')" ]; then
        debug "No podman machine exists"
        return 1
    fi

    # Check if machine is running
    if ! podman machine list --format "{{.Running}}" | grep -q "true"; then
        debug "Podman machine is not running. Starting..."
        podman machine start
    fi

    # Get socket path and verify it exists
    socket_path=$(podman machine inspect | jq -r '.[0].ConnectionInfo.PodmanSocket.Path')
    debug "Socket path is: $socket_path"
    
    # Give the socket a moment to be created if machine just started
    sleep 2

    if [ ! -e "$socket_path" ]; then
        debug "Podman socket file does not exist at $socket_path"
        return 1
    fi

    export DOCKER_HOST="unix://$socket_path"
    debug "DOCKER_HOST has been set to unix://$socket_path"
}

# Create alias for easy access
alias podhost="setup_podman_docker_host -v"

# Try to set up DOCKER_HOST on shell startup (quiet mode)
# setup_podman_docker_host >/dev/null 2>&1

export EDITOR=vim
